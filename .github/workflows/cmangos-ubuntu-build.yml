name: Ubuntu Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  REPO_DIR : ${{github.workspace}}
  BUILD_DIR: ${{github.workspace}}/bin/builddir
  BOOST_VERSION: "1.83.0"
  BOOST_PLATFORM_VERSION: "22.04"
  COMPILER_CC: clang
  COMPILER_PP: clang++
  CORE_REPO_OWNER: ${{github.repository_owner}}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read

    strategy:
      matrix:
        version: [classic]
        include:
          - os: ubuntu-22.04
            EXTRA_BUILD: "-DBUILD_PLAYERBOTS=ON"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository_owner}}/mangos-${{matrix.version}}
          ref: master
          path: ${{env.REPO_DIR}}

      - name: Create Build Environment
        run: |
          echo "GITHUB_SHORT_REV=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "ARCHIVE_FILENAME=${{ github.event.repository.name }}-$(git rev-parse --short HEAD).zip" >> $GITHUB_ENV
          echo "CC=${{env.COMPILER_CC}}" >> $GITHUB_ENV
          echo "CXX=${{env.COMPILER_PP}}" >> $GITHUB_ENV
          cmake -E make_directory ${{ env.BUILD_DIR }}

      - name: Install Boost
        uses: MarkusJx/install-boost@v2.4.5
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: ${{env.BOOST_VERSION}}
          # OPTIONAL: Specify a platform version
          platform_version: ${{env.BOOST_PLATFORM_VERSION}}
          # OPTIONAL: Specify a toolset
          toolset: gcc
          # OPTIONAL: Specify an architecture
          arch: x86
          # NOTE: If a boost version matching all requirements cannot be found,
          # this build step will fail

      - name: Configure
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: cmake -DBoost_ARCHITECTURE=-x64 -DCMAKE_INSTALL_PREFIX=/home/runner/work ${{matrix.EXTRA_BUILD}} -B ${{env.BUILD_DIR}} -S ${{env.REPO_DIR}}

      - name: Build
        env:
          MAKEFLAGS: "-j8"
        run: |
            cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}}
            cmake --install ${{env.BUILD_DIR}}
